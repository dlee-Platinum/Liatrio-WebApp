Name: CI/CD web-app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:
    runs-on: ubuntu-latest

# 1)check repository for Dockerfile
steps:  
  - name: Checkout repository
    uses: actions/checkout@v4

# 2)Build docker image using Dockerfile. (This will create an image in Docker root directory)
  - name: Build Docker image
    run: |
        docker build -t my-app:latest .

# 3)Build container with docker image. ( Container created in the root directory)
  - name: Build and push
    uses: docker/build-push-action@v6
    with:
         push: true
         tags: user/app:latest
 
  - name: Build Docker Container
      run: |
        docker run -d -p 80:3000 web-app1.0


# 4)Test container with apprentice-action (Will try to access localhost 80)
  - name: run tests
    uses: liatrio/github-actions/apprentice-action@master
Push:
# 5)After pass, push image to docker hub(this is a public repository in docker hub. don't expect to push containers, not sure if that is even allowed)

   - name: Login to Docker Hub
     uses: docker/login-action@v3
     with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

   - name: Push Docker image to Docker Hub
      run:|
        docker push my-dockerhub-username/my-app:latest
Deploy:
# 6) Push image from docker hub to AWS ECR repository.
   - name: Log in to AWS
     uses: aws-actions/configure-aws-credentials@v1
     with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

   - name: Set up AWS CLI
     uses: aws-actions/configure-aws-credentials@v1
     with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

# 7)Deploy image to AWS ECS( This would be achieve through Terraform)

   - name: Deploy to AWS (example for ECS)
     run: |
          # Assuming you're deploying to an ECS service
          aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment

   - name: Build and push Docker image to ECR
     run: |
        $(aws ecr get-login --no-include-email --region us-west-2)
        docker tag my-app:latest <your_aws_account_id>.dkr.ecr.us-west-2.amazonaws.com/my-app:latest
        docker push <your_aws_account_id>.dkr.ecr.us-west-2.amazonaws.com/my-app:latest

   - name: Deploy to ECS
     run: |
        ecs_deploy --cluster my-cluster --service my-service --image <your_aws_account_id>.dkr.ecr.us-west-2.amazonaws.com/my-app:latest

 
